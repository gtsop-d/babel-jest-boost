const path = require('path');

const graphqlConfig = {
  env: 'apollo',
  schemaJsonFilepath: path.resolve(__dirname, './src/graphql/schema.json'),
};

module.exports = {
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    node: true,
    jest: true,
    'jest/globals': true,
  },
  extends: [
    'airbnb',
    'airbnb/hooks',
    'react-app',
    'react-app/jest',
    'eslint:recommended',
    'plugin:import/errors',
    'plugin:react/recommended',
    'plugin:prettier/recommended',
    'plugin:jest/recommended',
    'plugin:testing-library/react',
    'plugin:jsx-a11y/recommended',
  ],
  parser: '@typescript-eslint/parser',
  plugins: [
    '@typescript-eslint',
    'enforce-ids-in-jsx',
    'eslint-plugin-local-rules',
    'graphql',
    'import',
    'jest',
    'json',
    'jsx-a11y',
    'no-relative-import-paths',
    'prettier',
    'react',
    'react-hooks',
    'testing-library',
    // 'unused-imports',
  ],
  rules: {
    'no-relative-import-paths/no-relative-import-paths': [
      'warn',
      {
        allowSameFolder: true,
      },
    ],
    'enforce-ids-in-jsx/unique-ids': 'error',
    'enforce-ids-in-jsx/missing-ids': [
      'error',
      {
        target: ['none'],
        targetCustom: ['TextField', 'Select'],
        priorityOverSpread: false,
      },
    ],
    'graphql/required-fields': ['error', {...graphqlConfig, requiredFields: ['id']}],
    'import/prefer-default-export': 0,
    'import/no-extraneous-dependencies': 0,
    'import/extensions': [
      'error',
      'ignorePackages',
      {
        js: 'never',
        jsx: 'never',
        ts: 'never',
        tsx: 'never',
      },
    ],
    'linebreak-style': ['error', 'unix'],
    'comma-dangle': ['error', 'always-multiline'],
    'no-alert': 2,
    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,
    'no-console':
      process.env.NODE_ENV === 'production' ? ['error', { allow: ['error'] }] : ['warn', { allow: ['error'] }],
    'no-underscore-dangle': ['error', { allow: ['__typename'] }],
    'jsx-a11y/anchor-is-valid': 0,
    'jsx-a11y/click-events-have-key-events': 0,
    'jsx-a11y/media-has-caption': 0,
    'jsx-a11y/no-noninteractive-element-interactions': 0,
    'jsx-a11y/no-static-element-interactions': 0,
    'prettier/prettier': ['error'],
    'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
    'react/jsx-one-expression-per-line': [1, { allow: 'single-child' }],
    'react/destructuring-assignment': 0,
    'react/prop-types': "off",
    "react/require-default-props": "off",
    'react/forbid-prop-types': 0,
    'react/display-name': 0,
    'react/jsx-wrap-multilines': 0,
    'react/no-unescaped-entities': ['error', { forbid: ['>', '}'] }],
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',
    'react/jsx-props-no-spreading': 0,
    'react/no-unused-prop-types': 0,
    'jest/no-export': 0,
    'jest/no-hooks': 0,
    'testing-library/no-wait-for-side-effects': 0,
    'testing-library/no-render-in-setup': 0,
    'testing-library/no-container': 0,
    'testing-library/prefer-query-by-disappearance': 0,
    'testing-library/prefer-presence-queries': 0,
    'testing-library/prefer-screen-queries': 0,
    'testing-library/no-unnecessary-act': 0,
    'testing-library/no-wait-for-multiple-assertions': 0,
    'testing-library/render-result-naming-convention': 0,
    'no-redeclare': 'off',
    '@typescript-eslint/no-redeclare': ['error', { ignoreDeclarationMerge: true }],
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': 'error',
    '@typescript-eslint/consistent-type-imports': ['error', { prefer: 'type-imports' }],
    'no-shadow': 'off',
    "class-methods-use-this": 0,

    'no-restricted-imports': [
      'error',
      {
        patterns: ['@mui/*/*/*'],
        paths: [
          { name: 'themes/maven/colors', message: "Please use only the colors exposed from the theme.palette" },
          { name: 'yup', message: "Please use the ioc provided instance of yup: const yup = ioc.make<Yup>('yup');" },
        ],
      },
    ],
    'local-rules/no-rff-form-import': 1,
    'local-rules/no-error-spy-in-form': 1,
    'require-await': 'error',
    // 'unused-imports/no-unused-imports': 1,
  },
  globals: {
    google: 'readonly',
    gapi: 'readonly',
    React: 'readonly',
    NodeJS: 'readonly',
    JSX: 'readonly',
    Yup: 'readonly',
    SxClasses: 'readonly',
    Maven: 'readonly',
    Pusher: 'readonly',
    importScripts: 'readonly',
  },
  settings: {
    'import/resolver': {
      typescript: {},
      node: {
        paths: ['src'],
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.d.ts', '.graphql'],
      },
    },
  },
};
